const upload = require('../../common/uploadProfileImage')
const auth = require('../../middleware/auth')
const handleValidation = require('../../middleware/handleValidation')
const addToFavourites = require('./controller/addToFavourites')
const changePassword = require('./controller/changePassword')
const confirmEmail = require('./controller/confirmEmail')
const forgetPassword = require('./controller/forgetPassword')
const getFavourites = require('./controller/getFavourites')
const getUserById = require('./controller/getUserById')
const login = require('./controller/login')
const logout = require('./controller/logout')
const register = require('./controller/register')
const removeFromFavourites = require('./controller/removeFromFavourites')
const resendKey = require('./controller/resendKey')
const resetPassword = require('./controller/resetPassword')
const updatePassword = require('./controller/updatePassword')
const updateUser = require('./controller/updateUser')
const { signupValidation, loginValidation, forgetPasswordValidation, resetPasswordValidation, changePasswordValidation, getUserValidation, updateUserValidation, updatePasswordValidation, logoutValidation, addToFavouritesValidation, removeFromFavouritesValidation, getFavouritesValidation, confirmEmailValidation, resendKeyValidation } = require('./user.validation')

const router = require('express').Router()

router.post('/register', handleValidation(signupValidation), register)
router.patch('/verifyEmail/:userId',handleValidation(confirmEmailValidation), confirmEmail)
router.post('/login', handleValidation(loginValidation), login)
router.post('/forgetPassword', handleValidation(forgetPasswordValidation), forgetPassword)
router.patch('/resetPassword', handleValidation(resetPasswordValidation), auth(['user']), resetPassword)
router.patch('/changePassword', handleValidation(changePasswordValidation), auth(['user']), changePassword)
router.get('/getUser/:userId', auth(['user', 'admin']) ,handleValidation(getUserValidation), getUserById)
router.put('/updateUser', auth(['user', 'admin']), upload, handleValidation(updateUserValidation), updateUser)
router.patch('/updatePassword', auth(['user', 'admin']), handleValidation(updatePasswordValidation), updatePassword)
router.patch('/logout/:userId', auth(['user', 'admin']), handleValidation(logoutValidation), logout)
router.patch('/addToFavourites/:movieId', auth(['user', 'admin']), handleValidation(addToFavouritesValidation), addToFavourites)
router.patch('/removeFromFavourites/:movieId', auth(['user', 'admin']), handleValidation(removeFromFavouritesValidation),removeFromFavourites)
router.get('/getFavourites',handleValidation(getFavouritesValidation), auth(['user', 'admin']), getFavourites)
router.patch('/resendKey/:userId', handleValidation(resendKeyValidation), resendKey)



module.exports = router